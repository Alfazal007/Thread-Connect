// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.26.0
// source: follow.sql

package database

import (
	"context"

	"github.com/google/uuid"
)

const getFollowers = `-- name: GetFollowers :many
SELECT u.email FROM follow f JOIN users u ON f.follower = u.id WHERE f.following = $1
`

func (q *Queries) GetFollowers(ctx context.Context, following uuid.UUID) ([]string, error) {
	rows, err := q.db.QueryContext(ctx, getFollowers, following)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []string
	for rows.Next() {
		var email string
		if err := rows.Scan(&email); err != nil {
			return nil, err
		}
		items = append(items, email)
	}
	if err := rows.Close(); err != nil {
		return nil, err
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}

const getUsername = `-- name: GetUsername :one
select username from users where id=$1
`

func (q *Queries) GetUsername(ctx context.Context, id uuid.UUID) (string, error) {
	row := q.db.QueryRowContext(ctx, getUsername, id)
	var username string
	err := row.Scan(&username)
	return username, err
}
